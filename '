package thefarm

import "errors"

// TODO: define the 'DivideFood' function
func DivideFood(fc FodderCalculator, ncows int) (float64, error) {
  amount, err := fc.FodderAmount(ncows)
  if err != nil {
    return 0.0, err
  }
  factor, err := fc.FatteningFactor()
  if err != nil {
    return 0.0, err
  }
  return float64(amount*factor), nil
}

// TODO: define the 'ValidateInputAndDivideFood' function
func ValidateInputAndDivideFood(fc FodderCalculator, ncows int) (float64, error){
  if ncows <= 0 {
    return 0.0, errors.New("invalid number of cows") 
  }
}
// TODO: define the 'ValidateNumberOfCows' function

// Your first steps could be to read through the tasks, and create
// these functions with their correct parameter lists and return types.
// The function body only needs to contain `panic("")`.
//
// This will make the tests compile, but they will fail.
// You can then implement the function logic one by one and see
// an increasing number of tests passing as you implement more
// functionality.
